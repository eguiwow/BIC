# Generated by Django 3.1.6 on 2021-05-23 22:49

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BikeLane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('distance', models.FloatField(null=True)),
                ('mlstring', django.contrib.gis.db.models.fields.MultiLineStringField(null=True, srid=4326)),
                ('lstring', django.contrib.gis.db.models.fields.LineStringField(null=True, srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='GPX_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpx_name', models.TextField(help_text='The raw gpx file name')),
                ('gpx_file', models.FileField(blank=True, max_length=511, null=True, upload_to='uploads/gpx/', verbose_name='GPX File')),
            ],
        ),
        migrations.CreateModel(
            name='KML_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kml_name', models.TextField(help_text='The raw kml file name')),
                ('kml_file', models.FileField(blank=True, max_length=511, null=True, upload_to='uploads/kml/', verbose_name='KML File')),
            ],
        ),
        migrations.CreateModel(
            name='SCK_device',
            fields=[
                ('sck_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sensor_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=140)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('distance', models.FloatField(null=True)),
                ('mlstring', django.contrib.gis.db.models.fields.MultiLineStringField(null=True, srid=4326)),
                ('lstring', django.contrib.gis.db.models.fields.LineStringField(null=True, srid=4326)),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datacentre.sck_device')),
            ],
        ),
        migrations.CreateModel(
            name='Trackpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datacentre.track')),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(null=True)),
                ('value', models.FloatField(null=True)),
                ('units', models.CharField(max_length=50)),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datacentre.sck_device')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datacentre.sensor')),
                ('trkpoint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datacentre.trackpoint')),
            ],
        ),
        migrations.CreateModel(
            name='Dtour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(null=True)),
                ('ratio', models.FloatField(null=True)),
                ('mlstring', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
                ('track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datacentre.track')),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('zoom', models.FloatField()),
                ('devices', models.ManyToManyField(to='datacentre.SCK_device')),
            ],
        ),
    ]
